# eLKA Studio Configuration
server:
  host: "127.0.0.1"
  port: 8000

# Application secrets
security:
  # Used for encrypting stored Git tokens. Replace with your own random string.
  secret_key: "change-me"

# Local storage paths
storage:
  projects_dir: "~/.elka/projects"
  database_file: "~/.elka/elka.db"

git:
  default_branch: "main"

ai:
  # Select the AI provider used by the backend. Supported values:
  # - "heuristic" (deterministic fallback that avoids external services)
  # - "gemini" (requires GEMINI_API_KEY)
  provider: "heuristic"
  models:
    gemini-pro: "gemini-2.5-pro"
    gemini-flash: "gemini-2.5-flash"
  adapters:
    gemini:
      # Configure how many Gemini requests per minute workers may issue before
      # proactively waiting. Adjust when Google updates free-tier quotas.
      rate_limit_rpm: 60
  # Optional explicit API key when you prefer storing it in the config file
  # instead of the environment. The environment variable always takes
  # precedence and secrets should never be committed.
  gemini_api_key: ""
  # When provider == "gemini" the backend will call two separate models:
  # - validator_model runs story validation and consistency checks.
  # - writer_model generates markdown bodies (timeline/entity updates).
  # You can override these per environment through AI_VALIDATOR_MODEL and
  # AI_WRITER_MODEL environment variables.
  validator_model: "gemini-2.5-pro"
  writer_model: "gemini-2.5-flash"
  # Existing clients relying on ai.model for metadata continue to work.
  model: "heuristic-v1"

tasks:
  generation:
    model: "gemini-flash"
  seed_generation:
    model: "gemini-pro"
  extraction:
    model: "gemini-flash"
  validation:
    model: "gemini-pro"
  planning:
    model: "gemini-pro"

stories:
  directory: "stories"
  extension: ".md"
  timestamp_format: "%Y%m%d-%H%M%S"

# Cross-origin resource sharing
cors:
  allow_origins:
    - "http://127.0.0.1:5173"
    - "http://localhost:5173"
